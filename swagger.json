{
  "swagger": "2.0",
  "info": {
    "description": "API Documentation for SecondHand Backend Server",
    "version": "1.0.0",
    "title": "SecondHand API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "secondhand-be.up.railway.app",
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication Endpoints"
    },
    {
      "name": "Product",
      "description": "Product Data Endpoints"
    },
    {
      "name": "Category",
      "description": "Category Endpoints"
    },
    {
      "name": "User Biodata",
      "description": "Biodata Endpoints"
    },
    {
      "name": "Wishlist",
      "description": "Wishlist Endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction Endpoints"
    },
    {
      "name": "Notification",
      "description": "Notification Endpoints"
    },
    {
      "name": "Chat",
      "description": "Chat Endpoints"
    }
  ],
  "schemes": ["https"],
  "paths": {
    "/category": {
      "get": {
        "tags": ["Category"],
        "summary": "Get Categories",
        "description": "Get All Categories",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "404": {
            "description": "Categories Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Categories not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },

    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login User",
        "description": "Login User",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User Data",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Email and password is required"
                }
              }
            }
          },
          "404": {
            "description": "Wrong E-Mail / User Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "EMAIL_NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "User / E-Mail not found"
                }
              }
            }
          },
          "403": {
            "description": "Wrong Password",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "WRONG_PASSWORD"
                },
                "message": {
                  "type": "string",
                  "example": "Wrong password"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register User",
        "description": "Register User",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Test User"
                },
                "email": {
                  "type": "string",
                  "example": "testuser@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Email and password is required"
                }
              }
            }
          },
          "409": {
            "description": "Email already used",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "EMAIL_EXISTS"
                },
                "message": {
                  "type": "string",
                  "example": "Email already used"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login User using Google OAuth",
        "description": "Login User using Google OAuth",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Google Auth Code",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "auth-code"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Google auth code is required"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "post": {
        "tags": ["Auth"],
        "summary": "Check User Token & Get User Biodata",
        "description": "Check User Token Validity and Get User Self Biodata",
        "security": [
          {
            "access_token": []
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 10
                    },
                    "name": {
                      "type": "string",
                      "example": "Kurniawan Cristianto"
                    },
                    "city": {
                      "type": "string",
                      "example": "Jambi"
                    },
                    "address": {
                      "type": "string",
                      "example": "Jl. Jambi No.17"
                    },
                    "phone_numver": {
                      "type": "string",
                      "example": "08123456789"
                    },
                    "picture": {
                      "type": "string",
                      "example": "kurniawan.png"
                    },
                    "email": {
                      "type": "string",
                      "example": "kurniawan@gmail.com"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh Token",
        "description": "Get User New Access Token and New Refresh Token",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Refresh Token Data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Refresh token is required"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Invalid or expired refresh token"
                }
              }
            }
          }
        }
      }
    },

    "/product": {
      "get": {
        "tags": ["Product"],
        "summary": "Get Products",
        "description": "Get All Products",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "type": "string",
            "example": "Electronic",
            "description": "Filter products based on category"
          },
          {
            "in": "query",
            "name": "keyword",
            "type": "string",
            "example": "jam",
            "description": "Search products based on keyword"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "example": "10",
            "description": "Limit products result count for pagination"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "example": "2",
            "description": "Skip multiple products for pagination"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Product"],
        "summary": "Create Product",
        "description": "Create New Product",
        "security": [
          {
            "access_token": []
          }
        ],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "formData",
            "name": "name",
            "type": "string",
            "required": true,
            "description": "Product Name"
          },
          {
            "in": "formData",
            "name": "price",
            "type": "integer",
            "required": true,
            "description": "Product Price"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string",
            "required": true,
            "description": "Product Category"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true,
            "description": "Product Description"
          },
          {
            "in": "formData",
            "name": "pictures",
            "type": "file",
            "required": true,
            "description": "Product Pictures"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "product": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Product name, price, category, description, and picture is required"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get Product",
        "description": "Get Single Product by Product ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "product": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Product ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Product"],
        "summary": "Update Product",
        "description": "Update Single Product by Product ID",
        "security": [
          {
            "access_token": []
          }
        ],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Product ID"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string",
            "description": "Product Name"
          },
          {
            "in": "formData",
            "name": "price",
            "type": "integer",
            "description": "Product Price"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string",
            "description": "Product Category"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "description": "Product Description"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string",
            "enum": ["READY", "SOLD"]
          },
          {
            "in": "formData",
            "name": "pictures",
            "type": "file",
            "description": "Product Pictures"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "updatedProduct": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Product ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete Product",
        "description": "Delete Single Product by Product ID",
        "security": [
          {
            "access_token": []
          }
        ],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Product successfully deleted"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Product ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },

    "/biodata/{id}": {
      "get": {
        "tags": ["User Biodata"],
        "summary": "Get User Biodata",
        "description": "Get Single User Biodata by User Biodata ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "User ID"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "biodata": {
                  "$ref": "#/definitions/UserBiodata"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid User Biodata ID is required"
                }
              }
            }
          },
          "404": {
            "description": "User Biodata Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "User Biodata not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/biodata": {
      "put": {
        "tags": ["User Biodata"],
        "summary": "Update Biodata",
        "description": "Update User Biodata",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "name",
            "type": "string",
            "description": "User Full Name"
          },
          {
            "in": "formData",
            "name": "city",
            "type": "string",
            "description": "User City"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string",
            "description": "User Address"
          },
          {
            "in": "formData",
            "name": "phone_number",
            "type": "string",
            "description": "User Phone Number"
          },
          {
            "in": "formData",
            "name": "pictures",
            "type": "file",
            "description": "User Profile Pictures"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "updatedBiodata": {
                  "$ref": "#/definitions/UserBiodata"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },

    "/wishlist": {
      "get": {
        "tags": ["Wishlist"],
        "summary": "Get Wishlists",
        "description": "Get User Wishlists",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "as",
            "type": "string",
            "required": false,
            "description": "Filter transactions by seller perspective"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "wishlists": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Wishlist"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/wishlist/{id}": {
      "get": {
        "tags": ["Wishlist"],
        "summary": "Check Wishlist",
        "description": "Check if product is wishlisted by User",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "description": "Product ID"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "isWishlist": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Product ID is required"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Wishlist"],
        "summary": "Add to Wishlist",
        "description": "Add Product to User Wishlist",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "description": "Product ID"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "wishlist": {
                  "$ref": "#/definitions/Wishlist"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Product ID is required"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Product not found"
                }
              }
            }
          },
          "409": {
            "description": "Wishlist Already Exists",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "ALREADY_EXISTS"
                },
                "message": {
                  "type": "string",
                  "example": "Product is already in wishlist"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Wishlist"],
        "summary": "Delete Wishlist",
        "description": "Delete Product from User Wishlists",
        "security": [
          {
            "access_token": []
          }
        ],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Wishlist successfully deleted"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid product ID is required"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "404": {
            "description": "Wishlist Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Wishlist not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/transaction": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get Transactions",
        "description": "Get All Transactions",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "enum": ["accepted", "rejected", "pending", "completed"],
            "description": "Filter transactions based on status"
          },
          {
            "in": "query",
            "name": "as",
            "type": "string",
            "enum": ["buyer", "seller"],
            "description": "Filter transactions based on role"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "transactions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },

    "/transaction/{id}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get Transaction",
        "description": "Get Single Transaction by Transaction ID",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Transaction ID"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "transaction": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Transaction ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Transaction Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Transaction not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Transaction"],
        "summary": "Create Transaction",
        "description": "Create New Transaction",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Product ID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Transaction Data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "price": {
                  "type": "integer",
                  "example": 50000,
                  "description": "Offered price from buyer"
                }
              }
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "transaction": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid product ID and offered price is required"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Transaction"],
        "summary": "Update Transaction",
        "description": "Update Transaction",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Transaction ID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Transaction Data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "price": {
                  "type": "integer",
                  "example": 50000,
                  "description": "Offered price from buyer"
                },
                "status": {
                  "type": "string",
                  "enum": ["accepted", "rejected", "pending"],
                  "description": "Transaction status"
                }
              }
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "updatedTransaction": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid product ID and offered price is required"
                }
              }
            }
          },

          "404": {
            "description": "Transaction Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Transaction not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Transaction"],
        "summary": "Delete Transaction",
        "description": "Delete Transaction",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Transaction ID"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Transaction successfully deleted"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "404": {
            "description": "Transaction Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Transaction not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },

    "/notification": {
      "get": {
        "tags": ["Notification"],
        "summary": "Get Notification",
        "description": "Get All Notification",
        "security": [
          {
            "access_token": []
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "notifications": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NewProductNotification"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Notification"],
        "summary": "Read All Notifications",
        "description": "Read All Notifications",
        "security": [
          {
            "access_token": []
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "All notification has been read"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/notification/{id}": {
      "put": {
        "tags": ["Notification"],
        "summary": "Update Notification",
        "description": "Update Notification",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Notification ID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Notification Read Status",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "read": {
                  "type": "boolean",
                  "enum": [true, false],
                  "description": "Notification read status"
                }
              }
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "updatedNotification": {
                  "$ref": "#/definitions/NewOfferNotification"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Notification ID is required"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "404": {
            "description": "Notification Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Notification not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Notification"],
        "summary": "Delete Notification",
        "description": "Delete Notification",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Notification ID"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Notification successfully deleted"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "404": {
            "description": "Notification Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Notification not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },

    "/chat": {
      "get": {
        "tags": ["Chat"],
        "summary": "Get All Chats",
        "description": "Get All Chats belongs to User",
        "security": [
          {
            "access_token": []
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "chats": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Chat"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/chat/{id}": {
      "get": {
        "tags": ["Chat"],
        "summary": "Get All Chat Messages",
        "description": "Get All Chat Messages belongs to specified Chat",
        "security": [
          {
            "access_token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Chat ID"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "chats": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ChatMessage"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Chat ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Chat Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Chat not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string",
            "example": ["Health", "Sport", "Automotive", "Electronic", "Property"]
          }
        }
      }
    },
    "User": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "example": "user@mail.com"
        },
        "password": {
          "type": "string",
          "example": "12345"
        }
      }
    },
    "UserBiodata": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "example": 10
        },
        "name": {
          "type": "string",
          "example": "Muhammad Zaky Aonillah"
        },
        "city": {
          "type": "string",
          "example": "Jakarta"
        },
        "address": {
          "type": "string",
          "example": "Jalan Jendral Sudirman"
        },
        "phone_number": {
          "type": "string",
          "example": "082398327564"
        },
        "picture": {
          "type": "string",
          "example": "user_profile.png"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Product": {
      "type": "object",
      "required": ["name", "price", "category", "description", "pictures"],
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "name": {
          "type": "string",
          "example": "Jam Tangan"
        },
        "price": {
          "type": "integer",
          "example": "150000"
        },
        "category": {
          "type": "string",
          "example": "Electronic"
        },
        "description": {
          "type": "string",
          "example": "Jam Tangan Kualitas Bagus"
        },
        "status": {
          "type": "string",
          "example": "READY"
        },
        "seller": {
          "$ref": "#/definitions/UserBiodata"
        },
        "pictures": {
          "type": "array",
          "items": {
            "type": "string",
            "example": ["jam_tangan_1.png", "jam_tangan_2.png"]
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Wishlist": {
      "type": "object",
      "required": ["product_id, user_id"],
      "properties": {
        "product": {
          "$ref": "#/definitions/Product"
        }
      }
    },
    "SellerWishlist": {
      "type": "object",
      "properties": {
        "product": {
          "$ref": "#/definitions/Product"
        },
        "user": {
          "$ref": "#/definitions/UserBiodata"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "buyer": {
          "$ref": "#/definitions/UserBiodata"
        },
        "price": {
          "type": "integer",
          "example": 50000
        },
        "status": {
          "type": "string",
          "example": "PENDING"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NewProductNotification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "type": {
          "type": "string",
          "example": "NEW_PRODUCT"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "read": {
          "type": "boolean",
          "example": false
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NewOfferNotification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "type": {
          "type": "string",
          "example": "NEW_OFFER"
        },
        "transaction": {
          "$ref": "#/definitions/Transaction"
        },
        "read": {
          "type": "boolean",
          "example": false
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Chat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "buyer_id": {
          "type": "integer",
          "example": 1
        },
        "seller_id": {
          "type": "integer",
          "example": 2
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ChatMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "chat_id": {
          "type": "integer",
          "example": 1
        },
        "user_id": {
          "type": "integer",
          "example": 2
        },
        "message": {
          "type": "string",
          "example": "Ini adalah contoh isi pesan"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Token": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
            },
            "expireAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "refreshToken": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ik1pY2hhZWwgRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.Xk3hf0UUoSky6RDWjMib6x6yf1aE9xpPeTO_Pcfpw4Q"
            },
            "expireAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "access_token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "bearerFormat": "JWT"
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
